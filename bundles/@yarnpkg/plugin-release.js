/* eslint-disable */
module.exports = {
name: "@yarnpkg/plugin-release",
factory: function (require) {
var plugin;(()=>{var e={397:e=>{e.exports=function(){"use strict";return function(e,t,r){var n,o;for(n=0,o=t.length;n<o&&!(e(t[n],r)>0);n++);return n}}()},346:e=>{e.exports=function(){"use strict";return function e(t,r){var n,o,i=r.length;return i>=2?(n=r.slice(0,i/2),o=r.slice(i/2,i),function(e,t,r){var n=[],o=t.length,i=r.length;for(;o>0&&i>0;)e(t[0],r[0])<=0?(n.push(t.shift()),o--):(n.push(r.shift()),i--);o>0?n.push.apply(n,t):n.push.apply(n,r);return n}(t,e(t,n),e(t,o))):r.slice()}}()},993:(e,t,r)=>{var n,o;n=r(346),o=r(397),e.exports=function(){"use strict";var e;function t(e){return function(){return e}}function r(e){e=e||{},this.config=e,this.config.childrenPropertyName=e.childrenPropertyName||"children",this.config.modelComparatorFn=e.modelComparatorFn}function i(e,t){return t.parent=e,e.children.push(t),t}function s(e,t){this.config=e,this.model=t,this.children=[]}function a(e){return"function"==typeof e.config.modelComparatorFn}function c(e,t,r){var n;if(!(t instanceof s))throw new TypeError("Child must be of type Node.");if(t.parent=e,e.model[e.config.childrenPropertyName]instanceof Array||(e.model[e.config.childrenPropertyName]=[]),a(e))n=o(e.config.modelComparatorFn,e.model[e.config.childrenPropertyName],t.model),e.model[e.config.childrenPropertyName].splice(n,0,t.model),e.children.splice(n,0,t);else if(void 0===r)e.model[e.config.childrenPropertyName].push(t.model),e.children.push(t);else{if(r<0||r>e.children.length)throw new Error("Invalid index.");e.model[e.config.childrenPropertyName].splice(r,0,t.model),e.children.splice(r,0,t)}return t}function l(){var t={};if(1===arguments.length?"function"==typeof arguments[0]?t.fn=arguments[0]:t.options=arguments[0]:2===arguments.length?"function"==typeof arguments[0]?(t.fn=arguments[0],t.ctx=arguments[1]):(t.options=arguments[0],t.fn=arguments[1]):(t.options=arguments[0],t.fn=arguments[1],t.ctx=arguments[2]),t.options=t.options||{},t.options.strategy||(t.options.strategy="pre"),!e[t.options.strategy])throw new Error("Unknown tree walk strategy. Valid strategies are 'pre' [default], 'post' and 'breadth'.");return t}return e={},r.prototype.parse=function(e){var t,r,o;if(!(e instanceof Object))throw new TypeError("Model must be of type object.");if(o=new s(this.config,e),e[this.config.childrenPropertyName]instanceof Array)for(this.config.modelComparatorFn&&(e[this.config.childrenPropertyName]=n(this.config.modelComparatorFn,e[this.config.childrenPropertyName])),t=0,r=e[this.config.childrenPropertyName].length;t<r;t++)i(o,this.parse(e[this.config.childrenPropertyName][t]));return o},s.prototype.isRoot=function(){return void 0===this.parent},s.prototype.hasChildren=function(){return this.children.length>0},s.prototype.addChild=function(e){return c(this,e)},s.prototype.addChildAtIndex=function(e,t){if(a(this))throw new Error("Cannot add child at index when using a comparator function.");return c(this,e,t)},s.prototype.setIndex=function(e){if(a(this))throw new Error("Cannot set node index when using a comparator function.");if(this.isRoot()){if(0===e)return this;throw new Error("Invalid index.")}if(e<0||e>=this.parent.children.length)throw new Error("Invalid index.");var t=this.parent.children.indexOf(this);return this.parent.children.splice(e,0,this.parent.children.splice(t,1)[0]),this.parent.model[this.parent.config.childrenPropertyName].splice(e,0,this.parent.model[this.parent.config.childrenPropertyName].splice(t,1)[0]),this},s.prototype.getPath=function(){var e=[];return function t(r){e.unshift(r),r.isRoot()||t(r.parent)}(this),e},s.prototype.getIndex=function(){return this.isRoot()?0:this.parent.children.indexOf(this)},s.prototype.walk=function(){var t;t=l.apply(this,arguments),e[t.options.strategy].call(this,t.fn,t.ctx)},e.pre=function e(t,r){var n,o,i;for(i=t.call(r,this),n=0,o=this.children.length;n<o;n++){if(!1===i)return!1;i=e.call(this.children[n],t,r)}return i},e.post=function e(t,r){var n,o;for(n=0,o=this.children.length;n<o;n++)if(!1===e.call(this.children[n],t,r))return!1;return t.call(r,this)},e.breadth=function(e,t){var r=[this];!function n(){var o,i,s;if(0!==r.length){for(o=0,i=(s=r.shift()).children.length;o<i;o++)r.push(s.children[o]);!1!==e.call(t,s)&&n()}}()},s.prototype.all=function(){var r,n=[];return(r=l.apply(this,arguments)).fn=r.fn||t(!0),e[r.options.strategy].call(this,(function(e){r.fn.call(r.ctx,e)&&n.push(e)}),r.ctx),n},s.prototype.first=function(){var r,n;return(r=l.apply(this,arguments)).fn=r.fn||t(!0),e[r.options.strategy].call(this,(function(e){if(r.fn.call(r.ctx,e))return n=e,!1}),r.ctx),n},s.prototype.drop=function(){var e;return this.isRoot()||(e=this.parent.children.indexOf(this),this.parent.children.splice(e,1),this.parent.model[this.config.childrenPropertyName].splice(e,1),this.parent=void 0,delete this.parent),this},r}()},269:function(e){e.exports=function(){function e(t,r,n,o,i,s,a){var c,l,p="",h=0,d=o.slice(0);if(d.push([r,n])&&o.length>0&&(o.forEach((function(e,t){t>0&&(p+=(e[1]?" ":"│")+"  "),l||e[0]!==r||(l=!0)})),p+=function(e,t){var r=t?"└":"├";return r+=e?"─ ":"──┐"}(t,n)+t,i&&("object"!=typeof r||r instanceof Date)&&(p+=": "+r),l&&(p+=" (circular ref.)"),a(p)),!l&&"object"==typeof r){var u=function(e,t){var r=[];for(var n in e)e.hasOwnProperty(n)&&(t&&"function"==typeof e[n]||r.push(n));return r}(r,s);u.forEach((function(t){c=++h===u.length,e(t,r[t],c,d,i,s,a)}))}}var t={asLines:function(t,r,n,o){e(".",t,!1,[],r,"function"!=typeof n&&n,o||n)},asTree:function(t,r,n){var o="";return e(".",t,!1,[],r,n,(function(e){o+=e+"\n"})),o}};return t}()}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};(()=>{"use strict";r.r(n),r.d(n,{default:()=>S});function e(e,t,r,n){var o,i=arguments.length,s=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(i<3?o(s):i>3?o(t,r,s):o(t,r))||s);return i>3&&s&&Object.defineProperty(t,r,s),s}Object.create;Object.create;const t=require("@yarnpkg/core"),o=require("clipanion");var i,s=r(269);function a(e){var t;const r=(null===(t=e.children)||void 0===t?void 0:t.length)>0?{}:null;return e.children.forEach(e=>{r[e.name]=a(e)}),r}!function(e){e.json="json",e.tree="tree"}(i||(i={}));class c extends class{constructor(){this.children=[]}get chain(){return this._chain}get depth(){return this._chain.size}addChildren(e){return this.children.push(e),this}generateChain(){var e;this._chain=new Set(null===(e=this.parent)||void 0===e?void 0:e.chain),this._chain.add(this.id)}}{constructor(e,t){super(),this.parent=t,this.workspace=e,this.generateChain()}get id(){return this.workspace.anchoredLocator}get name(){return this.workspace.manifest.raw.name}}class l{async resolve(e){return await e.restoreInstallState(),this.buildWorkspacesTree(e)}buildWorkspacesTree(e){const t=this.getEssentialWorkspaces(e);if(0===t.length)throw new Error("Project doesn't have any essentail workspaces");const r=new c(e.topLevelWorkspace);return t.forEach(t=>{const n=new c(t,r);this.fillChildrenNodes(e,n),r.addChildren(n)}),r}getWorkspacePackage(e,t){const r=e.storedPackages.get(t.anchoredLocator.locatorHash);if(!r)throw new Error("Unknown workspace");return r}getEssentialWorkspaces(e){return e.workspaces.filter(t=>t.locator.name!==e.topLevelWorkspace.locator.name&&0===this.getWorkspaceInternalDependencies(e,t).size)}getWorkspaceInternalDependencies(e,t){const r=this.getWorkspacePackage(e,t),n=new Set;return[...r.dependencies,...r.peerDependencies].forEach(([,t])=>{const r=e.tryWorkspaceByIdent(t);r&&n.add(r)}),n}getWorkspaceExternalDependencies(e,t){const r=e.workspaces.filter(r=>{const n=this.getWorkspacePackage(e,r);return n.dependencies.has(t.locator.identHash)||n.peerDependencies.has(t.locator.identHash)});return new Set(r)}fillChildrenNodes(e,t){this.getWorkspaceExternalDependencies(e,t.workspace).forEach(r=>{if(t.chain.has(r.anchoredLocator))return;const n=new c(r,t);t.addChildren(n),this.fillChildrenNodes(e,n)})}}var p=r(993),h=r.n(p);class d{constructor(e){this.root=e,this.tree=this.parseWorkspaceNode(e)}findNodesByWorkspaces(e){return this.tree.all(({model:t})=>e.includes(t.workspace)).map(e=>e.model)}parseWorkspaceNode(e){return(new(h())).parse(e)}}class u extends o.Command{constructor(){super(...arguments),this.workspaceResolver=new l,this.outputFormat=i.tree}async execute(){this.validateInput();const e=await t.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await t.Project.find(e,this.context.cwd),n=await this.workspaceResolver.resolve(r);this.printTree(n)}validateInput(){if(!Object.keys(i).includes(this.outputFormat))throw new o.UsageError("Invalid --output-format option, can be 'json', 'tree'")}printTree(e){switch(this.outputFormat){case i.json:console.dir(JSON.stringify(function e(t){const r=[];return t.children.forEach(t=>{r.push(e(t))}),{name:t.name,children:r}}(e)));break;case i.tree:console.log((0,s.asTree)(function(e){return{[e.name]:a(e)}}(e),!1,!0))}}}u.usage=o.Command.Usage({category:"Release commands",description:"Prints monitored workspaces graph"}),e([o.Command.String("-o,--output-format",{description:"Output format, can be 'json', 'tree'"})],u.prototype,"outputFormat",void 0),e([o.Command.Path("release","graph")],u.prototype,"execute",null);const f=require("fs"),g=require("@yarnpkg/fslib"),m=require("@yarnpkg/parsers");require("semver");var w;async function y(e,{allowEmpty:r=!1}={}){const n=e.configuration;if(null===n.projectCwd)throw new o.UsageError("This command can only be run from within a Yarn project");const i=await async function(e){let t,r=null,n=e;do{t=n,await g.xfs.existsPromise(g.ppath.join(t,".git"))&&(r=t),n=g.ppath.dirname(t)}while(null===r&&n!==t);return r}(n.projectCwd),s=null!==i?await async function(e,{baseRefs:r}){if(0===r.length)throw new o.UsageError("Can't run this command with zero base refs specified.");const n=[];for(const o of r){const{code:r}=await t.execUtils.execvp("git",["merge-base",o,"HEAD"],{cwd:e});0===r&&n.push(o)}if(0===n.length)throw new o.UsageError("No ancestor could be found between any of HEAD and "+r.join(", "));const{stdout:i}=await t.execUtils.execvp("git",["merge-base","HEAD",...n],{cwd:e,strict:!0}),s=i.trim(),{stdout:a}=await t.execUtils.execvp("git",["show","--quiet","--pretty=format:%s",s],{cwd:e,strict:!0});return{hash:s,title:a.trim()}}(i,{baseRefs:n.get("changesetBaseRefs")}):null,a=null!==i?await async function(e,{base:r,project:n}){const o=t.miscUtils.buildIgnorePattern(n.configuration.get("changesetIgnorePatterns")),{stdout:i}=await t.execUtils.execvp("git",["diff","--name-only",""+r],{cwd:e,strict:!0}),s=i.split(/\r\n|\r|\n/).filter(e=>e.length>0).map(t=>g.ppath.resolve(e,g.npath.toPortablePath(t))),{stdout:a}=await t.execUtils.execvp("git",["ls-files","--others","--exclude-standard"],{cwd:e,strict:!0}),c=a.split(/\r\n|\r|\n/).filter(e=>e.length>0).map(t=>g.ppath.resolve(e,g.npath.toPortablePath(t))),l=[...new Set([...s,...c].sort())];return o?l.filter(e=>!g.ppath.relative(n.cwd,e).match(o)):l}(i,{base:s.hash,project:e}):[],c=n.get("deferredVersionFolder"),l=a.filter(e=>null!==g.ppath.contains(c,e));if(l.length>1)throw new o.UsageError("Your current branch contains multiple versioning files; this isn't supported:\n- "+l.join("\n- "));const p=new Set(t.miscUtils.mapAndFilter(a,r=>{const n=e.tryWorkspaceByFilePath(r);return null===n?t.miscUtils.mapAndFilter.skip:n}));if(0===l.length&&0===p.size&&!r)return null;const h=1===l.length?l[0]:g.ppath.join(c,t.hashUtils.makeHash(Math.random().toString()).slice(0,8)+".yml"),d=g.xfs.existsSync(h)?await g.xfs.readFilePromise(h,"utf8"):"{}",u=(0,m.parseSyml)(d),f=new Map;for(const r of u.declined||[]){const n=t.structUtils.parseIdent(r),o=e.getWorkspaceByIdent(n);f.set(o,w.DECLINE)}for(const[r,n]of Object.entries(u.releases||{})){const o=t.structUtils.parseIdent(r),i=e.getWorkspaceByIdent(o);f.set(i,n)}return{project:e,root:i,baseHash:null!==s?s.hash:null,baseTitle:null!==s?s.title:null,changedFiles:new Set(a),changedWorkspaces:p,releaseRoots:new Set([...p].filter(e=>null!==e.manifest.version)),releases:f,async saveAll(){const r={},n=[],o=[];for(const i of e.workspaces){if(null===i.manifest.version)continue;const e=t.structUtils.stringifyIdent(i.locator),s=f.get(i);s===w.DECLINE?n.push(e):void 0!==s?r[e]=s:p.has(i)&&o.push(e)}await g.xfs.mkdirPromise(g.ppath.dirname(h),{recursive:!0}),await g.xfs.changeFilePromise(h,(0,m.stringifySyml)(new m.stringifySyml.PreserveOrdering({releases:Object.keys(r).length>0?r:void 0,declined:n.length>0?n:void 0,undecided:o.length>0?o:void 0})))}}}!function(e){e.UNDECIDED="undecided",e.DECLINE="decline",e.MAJOR="major",e.MINOR="minor",e.PATCH="patch",e.PRERELEASE="prerelease"}(w||(w={}));class v{async generateReport(e,t){const{ignoreRoot:r=!1}=t||{},n=await y(e);if(!n)throw new Error("No any relevant information about the project");return function(e,t=[]){const{changedFiles:r,changedWorkspaces:n,root:o}=e,i={generatedAt:Date.now(),root:o,changedWorkspaces:[...n].filter(({locator:e})=>!t.includes(e.locatorHash)).map(({locator:e,cwd:t,relativeCwd:r,manifest:n})=>({fullName:n.raw.name||e.name,name:e.name,scope:e.scope,locatorHash:e.locatorHash,path:t,relativePath:r,currentVersion:e.reference,changedFiles:[],dependencies:n.dependencies}))},s=i.changedWorkspaces.sort((e,t)=>e.path.length>=t.path.length?-1:1);return r.forEach(e=>{const t=s.find(({path:t})=>e.includes(t));t&&t.changedFiles.push(e)}),i}(n,r?[e.topLevelWorkspace.locator.locatorHash]:[])}}class x extends o.Command{constructor(){super(...arguments),this.ignoreRoot=!1,this.saveReport=!1,this.topological=!0,this.reportManager=new v}async execute(){const e=await t.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await t.Project.find(e,this.context.cwd),n=await this.reportManager.generateReport(r,{ignoreRoot:this.ignoreRoot,topological:this.topological});this.outputReport(n)}outputReport(e){const t=JSON.stringify(e);this.saveReport?(0,f.writeFileSync)("./report.json",t,"utf-8"):console.dir(t)}}x.usage=o.Command.Usage({category:"Release commands",description:"Generate json report about release candidates"}),e([o.Command.Boolean("--ignore-root",{description:"Ignore the root workspace"})],x.prototype,"ignoreRoot",void 0),e([o.Command.Boolean("--save-report",{description:"Save JSON at your filesystem otherwise the result will be printed at your terminal."})],x.prototype,"saveReport",void 0),e([o.Command.Boolean("-t,--topological",{description:"Preserve topological ordering."})],x.prototype,"topological",void 0),e([o.Command.Path("release","report")],x.prototype,"execute",null);class k extends Error{constructor(){super("No changes")}}class b{constructor(){this.workspaceResolver=new l}async findCandidates(e){const t=await this.workspaceResolver.resolve(e),r=new d(t),n=[...(await this.generateVersionFile(e)).changedWorkspaces].filter(t=>t!==e.topLevelWorkspace);return this.findAffectedNodes(r,n)}async generateVersionFile(e){const t=await y(e);if(!t)throw new k;return t}findAffectedNodes(e,t){const r=new Map;return e.findNodesByWorkspaces(t).forEach(e=>{const t=e.workspace.locator,n=r.get(t);(!n||n.depth<e.depth)&&r.set(t,e)}),r}}class P extends o.Command{constructor(){super(...arguments),this.versionManager=new b}async execute(){const e=await t.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await t.Project.find(e,this.context.cwd),n=await this.versionManager.findCandidates(r),o=[];n.forEach(e=>{const t=[...e.chain].map(e=>{const{manifest:t}=r.getWorkspaceByLocator(e);return t.raw.name});o.push(t)}),console.dir("Affected chains:"),o.forEach(e=>console.dir(e.join(" → ")))}}function E(e){const t=[];return e.forEach(e=>{t.push(e)}),t}function C(e){const t=new Set;return e.forEach((e,r)=>{t.add(r)}),t}P.usage=o.Command.Usage({category:"Release commands",description:"Prints workspaces that should be utilized."}),e([o.Command.Path("release","version","check")],P.prototype,"execute",null);class j{resolve(e){const t=new Map;return this.fillSourceFragment(t,e),t}fillSourceFragment(e,[t,...r]){if(!t)return;if(!t.parent)return e.set(t,0),this.fillSourceFragment(e,r);const[n,o]=function(e,t){const r=function(e,t){let r=void 0;return e.chain.forEach(e=>{const n=t.find(t=>t.id===e);n&&(!r||n.depth>r.depth)&&(r=n)}),r}(t,[...C(e)]);return r?[e.get(r),r]:[0,void 0]}(e,t);o?e.set(t,n+1):e.set(t,0),r.length>0&&this.fillSourceFragment(e,r)}}class N{constructor(){this.rankResolver=new j}flatGroups(e){const{groupBy:t,input:r}=e;let n=[];return function(e){const t=new Map;return e.forEach((e,r)=>{const n=t.get(e)||[];n.push(r),t.set(e,n)}),t}(this.rankResolver.resolve(r)).forEach(e=>{const r=function(e,t){const r=Math.ceil(e.length/t),n=Array(r);for(let o=0;o<r;o++){const r=o*t;n[o]=e.slice(r,r+t)}return n}(e,t);n=[...n,...r]}),{groupBy:t,groups:n}}}class R extends o.Command{constructor(){super(...arguments),this.groupBy="1",this.versionManager=new b,this.groupManager=new N}async execute(){this.validateInput();const e=await t.Configuration.find(this.context.cwd,this.context.plugins),{project:r}=await t.Project.find(e,this.context.cwd),n=await this.versionManager.findCandidates(r),o=this.groupManager.flatGroups({groupBy:+this.groupBy,input:E(n)});var i;console.dir(JSON.stringify({groupBy:(i=o).groupBy,groups:i.groups.map(e=>e.map(e=>e.name))}))}validateInput(){const e=+this.groupBy;if(isNaN(e)||e<=0)throw new o.UsageError("Invalid group-by option")}}R.usage=o.Command.Usage({category:"Release commands",description:"Prints affected workspaces collected by chunks"}),e([o.Command.String("-g,--group-by",{description:"Slice workspaces by this number, it should be positive number"})],R.prototype,"groupBy",void 0),e([o.Command.Path("release","version","chunks")],R.prototype,"execute",null);const S={commands:[x,u,P,R]}})(),plugin=n})();
return plugin;
}
};